"""
Django settings for newCrm project.

Generated by 'django-admin startproject' using Django 4.2.4.

For more information on this file, see
https://docs.djangoproject.com/en/4.2/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/4.2/ref/settings/
"""

from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/4.2/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-hrze=t__*zn^&j!06n-z498#5q)n9hhmit5xw%kfvd^c30ck*2'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['localhost', 'crm.xn--36-6kch5aj8bbq6g.xn--p1ai', '127.0.0.1']

CSRF_TRUSTED_ORIGINS = ['https://crm.xn--36-6kch5aj8bbq6g.xn--p1ai', 'http://127.0.0.1', 'http://localhost']

# Async
DJANGO_ALLOW_ASYNC_UNSAFE = True

# Application definition

INSTALLED_APPS = [
    'daphne',
    'channels',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.humanize',
    'main'
]

# Custom user model
AUTH_USER_MODEL = 'main.User'

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'newCrm.urls'

TEMPLATES = [{
    'BACKEND': 'django.template.backends.django.DjangoTemplates',
    'DIRS': [],
    'APP_DIRS': True,
    'OPTIONS': {
        'context_processors': [
            'django.template.context_processors.debug',
            'django.template.context_processors.request',
            'django.contrib.auth.context_processors.auth',
            'django.contrib.messages.context_processors.messages',
        ],
    },
}]

ASGI_APPLICATION = 'newCrm.asgi.application'

# Database
# https://docs.djangoproject.com/en/4.2/ref/settings/#databases
DATABASES = {
    'default': {
        'CHARSET': 'utf8',
        'COLLATION': 'utf8_general_ci',
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'crm_dev',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': '127.0.0.1',
        'PORT': '5432',
    },
    'site': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'new-site',
        'USER': 'new-site',
        'PASSWORD': 'W3cpEmr6*27',
        'HOST': '91.105.196.187',
        'PORT': '5432',
    }
}

# Настройка каналов для очередей
CHANNEL_LAYERS = {
    'default': {
        "BACKEND": "channels_redis.core.RedisChannelLayer",
        "CONFIG": {
            "hosts": [('127.0.0.1', 6379)],
        },
    }
}

CELERY_BROKER_URL = 'redis://127.0.0.1:6379'
CELERY_RESULT_BACKEND = 'redis://127.0.0.1:6379'
CELERY_TIMEZONE = "Europe/Moscow"

# Password validation
# https://docs.djangoproject.com/en/4.2/ref/settings/#auth-password-validators
AUTH_PASSWORD_VALIDATORS = [
    {'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator'},
    {'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator'},
    {'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator'},
    {'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator'},
]

# Internationalization
# https://docs.djangoproject.com/en/4.2/topics/i18n/
LANGUAGE_CODE = 'ru-RU'
TIME_ZONE = 'Europe/Moscow'
USE_I18N = True
USE_L10N = True
USE_TZ = True
USE_THOUSAND_SEPARATOR = True

# Настройки логирования
LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'INFO',
            'class': 'logging.FileHandler',
            'filename': './logs/django.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
        'logging_app': {
            'handlers': ['file'],
            'level': 'INFO',
            'propagate': True,
        },
    },
    'formatters': {
        'simple': {
            'format': '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
        },
    },
}


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/4.2/howto/static-files/
STATICFILES_DIRS = [
    BASE_DIR / 'static',  # Укажите путь к папке, где хранятся ваши стили
]

# Укажите путь для собранных статических файлов (для collectstatic)
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATIC_URL = '/static/'



MEDIA_ROOT = './media'
MEDIA_URL = '/media/'

# Default primary key field type
# https://docs.djangoproject.com/en/4.2/ref/settings/#default-auto-field
DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Куда кидать будем после авторизации
LOGIN_REDIRECT_URL = '/'
LOGIN_URL = '/account/login/'

# Типы сущности для таблиц связей
ITEM_TYPE_CHOICES = (
    ('lead', 'Лид'),
    ('deal', 'Сделка'),
    ('task', 'Задача'),
    ('showing', 'Показ')
)

# Теплота лидов
LEAD_WARM_CHOICES = (
    ('hot', 'Горячий'),
    ('warm', 'Теплый'),
    ('cold', 'Холодный'),
    ('rent', 'Аренда'),
    ('not_client', 'Не клиент'),
    ('not_call', 'Не дозвонились'),
    ('not_actual', 'Не актуально')
)

# Вопросы у контакта
PURPOSE_BUY = (
    ('myself', 'Для себя'),
    ('invest', 'Инвестиции'),
    ('kids', 'Детям')
)

# Списки сделок
FROM_CHOICES = (
    ('raz', 'Развитие'),
    ('nmarket', 'Нмаркет'),
    ('perv', 'Домклик'),
    ('vdk', 'ВДК'),
    ('new-code', 'Новый код'),
    ('sz-cube', 'СЗ куб'),
    ('contract', 'Прямой договор'),
    ('city', 'Сити-центр'),
    ('sec', 'Вторичка'),
)

PAYTYPE_CHOICES = (
    ('cash', 'Наличный расчет'),
    ('cashless', 'Безналичный расчет'),
    ('mortgage', 'Ипотека')
)

MARITAL_CHOICES = (
    ('not_married', 'Не замужем / не женат'),
    ('married', 'Замужем / женат')
)

DECORATION_CHOICES = (
    ('clean', 'Чистовая'),
    ('black', 'Черновая'),
    ('preclean', 'Предчистовая')
)

# Статус обработки сделки
PROCESSED_CHOICES = (
    ('in_work', 'Взят в работу'),
    ('not', 'Не обработано'),
    ('complete', 'Обработано'),
    ('pre', 'Предварительно обработано'),
    ('redo', 'Возвращено в обработку')
)

# Количество элементов при динамической подгрузке
AJAX_PAGINATION = 20
# Количество элементов на странице с пагинацией
PAGINATION = 20

# Настройки дом ру
CRM_TOKEN = '53cr3t43y'
DOM_RU_KEY = 'e5dcceeb-8b64-477b-a644-549352ced3e5'
DOM_RU_ADDRESS = 'https://vpbx000052233b.domru.biz'

# WHATSUP
WHATSAPP_URL = 'https://api.wazzup24.com/v3'
WHATSAPP_TOKEN = 'd8ede2037e974197b26939a27e72350e'
WHATSAPP_CHANNEL_ID = '5fc482a3-0be0-48f6-b759-0a06b1945cbf'

# Telegram BOT key (если вы новый разраб, то попросите передать вам бота у прошлого)
TELEGRAM_BOT_KEY = '6746506307:AAGLk6oOkplmyZhPbCRdNBPe5gim_DUbNTE'
TELEGRAM_CHAT_ID = '-1002008808156'  # беседа "Новостройки Воронеж согласование 2

# Авито ключи
# Вторичка 36
AVITO_OLD_CLIENT_ID = 'QRpnP1S5xDYzjYOELAu4'
AVITO_OLD_CLIENT_SECRET = 'yVZ3PtFilMYmhDOEtzZty-CXIEPhePv7Vyh1vn-e'

# авито новостройка старый
AVITO_NEW_OLD_CLIENT_ID = '2rpemYvQAFM8JQsRJ7S0'
AVITO_NEW_OLD_CLIENT_SECRET = 'ttSZc4f8vKUzJGCcGz0T7y9qJb5fG3UNRs7C2cLt'

# авито новостройка новый
AVITO_NEW_CLIENT_ID = 'KlI3SGV2kcxysYiDxzG-'
AVITO_NEW_CLIENT_SECRET = 'Iw0HmnRLG1V4pG7olAqw2K4KGdPcmqEyQJVn-7cN'
