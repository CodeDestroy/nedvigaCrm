# Generated by Django 5.0 on 2023-12-23 16:17

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Bank',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('description', models.CharField(max_length=255, verbose_name='Описание')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'банк',
                'verbose_name_plural': 'банки',
                'db_table': 'banks',
            },
        ),
        migrations.CreateModel(
            name='Funnel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'воронка продаж',
                'verbose_name_plural': 'воронки продаж',
                'db_table': 'funnels',
            },
        ),
        migrations.CreateModel(
            name='Phone',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('sip', models.CharField(max_length=10, unique=True, verbose_name='SIP-номер')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
            ],
            options={
                'verbose_name': 'SIP-номер',
                'verbose_name_plural': 'SIP-номера',
                'db_table': 'phones',
            },
        ),
        migrations.CreateModel(
            name='Source',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('color', models.CharField(blank=True, max_length=12, null=True, verbose_name='Цвет стикера')),
                ('phone', models.CharField(blank=True, max_length=20, null=True, verbose_name='Номер телефона при котором срабатывает источник')),
            ],
            options={
                'verbose_name': 'источник лида',
                'verbose_name_plural': 'источники лидов',
                'db_table': 'sources',
            },
        ),
        migrations.CreateModel(
            name='Wantresult',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vid', models.IntegerField(default=0, verbose_name='Уникальный идентификатор посетителя')),
                ('site', models.CharField(max_length=50, verbose_name='Название домена')),
                ('page', models.CharField(blank=True, max_length=255, null=True, verbose_name='Страница, с которой произошло определение')),
                ('ref', models.CharField(blank=True, max_length=255, null=True, verbose_name='Страница, с которой посетитель перешел на страницу сайта')),
                ('time', models.DateTimeField(verbose_name='Время определения в системе Timestamp')),
                ('browser', models.CharField(blank=True, max_length=50, null=True, verbose_name='Браузер')),
                ('device', models.CharField(blank=True, max_length=50, null=True, verbose_name='Устройство')),
                ('platform', models.CharField(blank=True, max_length=50, null=True, verbose_name='Платформа')),
                ('country', models.CharField(blank=True, max_length=50, null=True, verbose_name='Страна')),
                ('region', models.CharField(blank=True, max_length=50, null=True, verbose_name='Регион')),
                ('city', models.CharField(blank=True, max_length=50, null=True, verbose_name='Город')),
                ('ip', models.CharField(max_length=15, verbose_name='IP')),
                ('comment', models.CharField(blank=True, max_length=255, null=True, verbose_name='Комментарий')),
                ('roistat_visit', models.IntegerField(blank=True, default=0, null=True, verbose_name='Уникальный идентификатор посетителя в системе')),
                ('phones', models.JSONField(blank=True, null=True, verbose_name='Номера телефонов')),
                ('mails', models.JSONField(blank=True, null=True, verbose_name='Адреса электронной почты')),
                ('utm', models.JSONField(blank=True, null=True, verbose_name='UTM-метки')),
            ],
            options={
                'verbose_name': 'лид wantresult',
                'verbose_name_plural': 'лиды wantresult',
                'db_table': 'wantresults',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('phone', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('online', models.BooleanField(default=False, verbose_name='Пользователь онлайн?')),
                ('fired', models.BooleanField(default=False, verbose_name='Уволен?')),
                ('debetor', models.BooleanField(default=False, verbose_name='Может просматривать дебеторскую задолженность?')),
                ('in_stat', models.BooleanField(default=True, verbose_name='Участвует в сделке?')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
                ('funnel', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.funnel', verbose_name='Основная воронка')),
                ('sip', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.phone', verbose_name='SIP-номер')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'db_table': 'users',
                'ordering': ['pk'],
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='AuthLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('ip', models.CharField(max_length=15, verbose_name='IP-адрес последней авторизации')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'последняя авторизация',
                'verbose_name_plural': 'последние авторизации',
                'db_table': 'authlogs',
            },
        ),
        migrations.CreateModel(
            name='Call',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('direction', models.CharField(choices=[('in', 'Входящий'), ('out', 'Исходящий')], max_length=4, verbose_name='Тип звонка')),
                ('uuid', models.CharField(max_length=191, unique=True, verbose_name='UUID')),
                ('status', models.CharField(choices=[('Success', 'Успешно'), ('Missed', 'Пропущенный звонок'), ('Cancel', 'Звонок отменен'), ('Busy', 'Занято'), ('NotAvailable', 'Абонент недоступен'), ('NotAllowed', 'Звонки на это направление запрещены'), ('NotFound', 'Нет такого SIP-номера')], max_length=13, verbose_name='Статус звонка')),
                ('event', models.CharField(choices=[('INCOMING', 'Поступил звонок'), ('ACCEPTED', 'Сняли трубку (звонок принят)'), ('COMPLETED', 'Успешно завершен'), ('CANCELLED', 'Звонок сброшен'), ('OUTGOING', 'Исходящий звонок'), ('TRANSFERRED', 'Переведен на другого')], max_length=12, verbose_name='Событие звонка')),
                ('record', models.CharField(blank=True, max_length=255, null=True, verbose_name='Запись звонка')),
                ('phone', models.CharField(max_length=15, verbose_name='Номер телефона')),
                ('ext', models.CharField(blank=True, max_length=15, null=True, verbose_name='Внутренний номер')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'звонок',
                'verbose_name_plural': 'звонки',
                'db_table': 'calls',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('type', models.CharField(choices=[('lead', 'Лид'), ('deal', 'Сделка'), ('task', 'Задача'), ('showing', 'Показ')], default='task', max_length=8, verbose_name='Тип сущности')),
                ('item_id', models.IntegerField(default=0, verbose_name='ID сущности')),
                ('text', models.TextField(verbose_name='Текст комментария')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('deleted', models.BooleanField(default=False)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'комментарий',
                'verbose_name_plural': 'комментарии',
                'db_table': 'comments',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Lead',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('surname', models.CharField(default='Новый клиент', max_length=100, verbose_name='Фамилия')),
                ('name', models.CharField(blank=True, max_length=100, null=True, verbose_name='Имя')),
                ('patronymic', models.CharField(blank=True, max_length=100, null=True, verbose_name='Отчество')),
                ('phone', models.CharField(max_length=17, verbose_name='Номер телефона')),
                ('email', models.CharField(blank=True, max_length=100, null=True, verbose_name='Адрес электронной почты')),
                ('projects', models.JSONField(blank=True, null=True, verbose_name='Проекты')),
                ('processed', models.CharField(choices=[('in_work', 'Взят в работу'), ('not', 'Не обработано'), ('complete', 'Обработано'), ('pre', 'Предварительно обработано'), ('redo', 'Возвращено в обработку')], default='not', verbose_name='Обработка')),
                ('warm', models.CharField(blank=True, choices=[('hot', 'Горячий'), ('warm', 'Теплый'), ('cold', 'Холодный'), ('not_client', 'Не клиент'), ('not_call', 'Не дозвонились')], max_length=11, null=True, verbose_name='Теплота')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('is_deleted', models.BooleanField(default=False, verbose_name='Лид удален?')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('first_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Кто первым принял звонок')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='lead_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
            ],
            options={
                'verbose_name': 'лид',
                'verbose_name_plural': 'лиды',
                'db_table': 'leads',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=255, verbose_name='Название сделки')),
                ('paytype', models.CharField(blank=True, choices=[('cash', 'Наличный расчет'), ('cashless', 'Безналичный расчет'), ('mortgage', 'Ипотека')], max_length=10, null=True, verbose_name='Тип платежа')),
                ('max_mortgage', models.FloatField(default=0, verbose_name='Максимально одобренная сумма')),
                ('mortgage', models.FloatField(default=0, verbose_name='Выданная банком сумма')),
                ('price', models.FloatField(default=0, verbose_name='Цена объекта')),
                ('flat_id', models.IntegerField(blank=True, null=True, verbose_name='ID квартиры с сайта')),
                ('office', models.BooleanField(default=False, verbose_name='Подана в офисе')),
                ('solution', models.BooleanField(default=False, verbose_name='Готовое решение')),
                ('onlineconfirm', models.BooleanField(default=False, verbose_name='Онлайн-бронь подтверждена')),
                ('frm', models.CharField(blank=True, choices=[('nmarket', 'Нмаркет'), ('perv', 'Первичка'), ('contract', 'Прямой договор')], db_column='from', max_length=10, null=True, verbose_name='Через')),
                ('com_agent', models.FloatField(default=0, verbose_name='Комиссия агентства')),
                ('com_manager', models.FloatField(default=0, verbose_name='Комиссия менеджера')),
                ('com_get', models.BooleanField(default=False, verbose_name='Выплата получена')),
                ('reserved', models.DateField(blank=True, null=True, verbose_name='Бронь')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('bank', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.bank', verbose_name='Банк')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('responsible', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deal_responsible', to=settings.AUTH_USER_MODEL, verbose_name='Ответственный')),
                ('seller', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Продавец')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.lead', verbose_name='Контакт')),
            ],
            options={
                'verbose_name': 'сделка',
                'verbose_name_plural': 'сделки',
                'db_table': 'deals',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Passport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('seria', models.CharField(blank=True, max_length=10, null=True, verbose_name='Серия')),
                ('number', models.CharField(blank=True, max_length=10, null=True, verbose_name='Номер')),
                ('date', models.DateField(blank=True, null=True, verbose_name='Дата выпуска')),
                ('whom', models.CharField(blank=True, max_length=150, null=True, verbose_name='Кем выдан')),
                ('address_registration', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адрес регистрации')),
                ('address_actual', models.CharField(blank=True, max_length=150, null=True, verbose_name='Адрес проживания')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.lead', verbose_name='Лид')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
            ],
            options={
                'verbose_name': 'паспорт',
                'verbose_name_plural': 'паспорта',
                'db_table': 'passports',
            },
        ),
        migrations.CreateModel(
            name='Questions',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('district', models.CharField(blank=True, max_length=150, null=True, verbose_name='Район')),
                ('budget', models.CharField(blank=True, max_length=150, null=True, verbose_name='Бюджет')),
                ('rooms', models.CharField(blank=True, max_length=150, null=True, verbose_name='Количество комнат')),
                ('deadline', models.CharField(blank=True, max_length=150, null=True, verbose_name='Срок сдачи')),
                ('purpose', models.CharField(blank=True, choices=[('myself', 'Для себя'), ('invest', 'Инвестиции'), ('kids', 'Детям')], max_length=7, null=True, verbose_name='Цель покупки')),
                ('decoration', models.CharField(blank=True, choices=[('clean', 'Чистовая'), ('black', 'Черновая'), ('preclean', 'Предчистовая')], max_length=15, null=True, verbose_name='Отделка')),
                ('developer', models.CharField(blank=True, max_length=50, null=True, verbose_name='Застройщик')),
                ('payment', models.CharField(blank=True, choices=[('cash', 'Наличный расчет'), ('cashless', 'Безналичный расчет'), ('mortgage', 'Ипотека')], max_length=9, null=True, verbose_name='Способы оплаты')),
                ('bank', models.CharField(blank=True, max_length=150, null=True, verbose_name='Банк')),
                ('maternity', models.BooleanField(default=False, verbose_name='Материнский капитал')),
                ('birth_date', models.DateField(blank=True, null=True, verbose_name='Дата рождения')),
                ('residence_place', models.CharField(blank=True, max_length=150, null=True, verbose_name='Место проживания')),
                ('residence_birth', models.CharField(blank=True, max_length=150, null=True, verbose_name='Место рождения')),
                ('marital_status', models.CharField(blank=True, choices=[('not_married', 'Не замужем / не женат'), ('married', 'Замужем / женат')], max_length=12, null=True, verbose_name='Семейное положение')),
                ('child_count', models.IntegerField(default=0, verbose_name='Количество детей')),
                ('child_ages', models.CharField(blank=True, max_length=150, null=True, verbose_name='Возраст детей')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('lead', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to='main.lead', verbose_name='Контакт')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
            ],
            options={
                'verbose_name': 'вопросы контакта',
                'verbose_name_plural': 'вопросы контактов',
                'db_table': 'questions',
            },
        ),
        migrations.CreateModel(
            name='Showing',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('date_to', models.DateTimeField(blank=True, null=True, verbose_name='Крайний срок')),
                ('is_done', models.BooleanField(default=False, verbose_name='Готово?')),
                ('project', models.JSONField(blank=True, null=True, verbose_name='Проект ЖК')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.deal', verbose_name='Сделка')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.lead', verbose_name='Лид')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='showing', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'показ объекта',
                'verbose_name_plural': 'показы объектов',
                'db_table': 'showings',
            },
        ),
        migrations.CreateModel(
            name='LeadSource',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('utm', models.JSONField(blank=True, null=True, verbose_name='UTM-метки по которым пришли с источника')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.lead', verbose_name='Лид')),
                ('source', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.source', verbose_name='Источник')),
            ],
            options={
                'verbose_name': 'связь источника и лида',
                'verbose_name_plural': 'связи источников и лидов',
                'db_table': 'lead_sources',
            },
        ),
        migrations.CreateModel(
            name='Stage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=255, verbose_name='Название')),
                ('statistic', models.BooleanField(default=False, verbose_name='Показывать стадию в статистике?')),
                ('deal_close', models.BooleanField(default=False, verbose_name='Закрывать сделку при переносе в стадию?')),
                ('good', models.BooleanField(default=False, verbose_name='Положительный статус')),
                ('bad', models.BooleanField(default=False, verbose_name='Отрицательный статус')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('funnel', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.funnel', verbose_name='Воронка продаж')),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stage', verbose_name='Родитель')),
            ],
            options={
                'verbose_name': 'стадия продажи',
                'verbose_name_plural': 'стадии продаж',
                'db_table': 'stages',
            },
        ),
        migrations.AddField(
            model_name='deal',
            name='stage',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.stage', verbose_name='Стадия продажи'),
        ),
        migrations.CreateModel(
            name='Task',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('priority', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)], verbose_name='Приоритет задачи')),
                ('name', models.TextField(verbose_name='Название')),
                ('text', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('date_to', models.DateTimeField(blank=True, null=True, verbose_name='Крайний срок')),
                ('is_done', models.BooleanField(default=False, verbose_name='Готово?')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_created_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто создал')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.deal', verbose_name='Сделка')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='main.lead', verbose_name='Лид')),
                ('updated_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='%(class)s_updated_items', to=settings.AUTH_USER_MODEL, verbose_name='Кто обновил')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='task', to=settings.AUTH_USER_MODEL, verbose_name='Исполнитель')),
            ],
            options={
                'verbose_name': 'задача',
                'verbose_name_plural': 'задачи',
                'db_table': 'tasks',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('name', models.CharField(max_length=150, verbose_name='Название')),
                ('text', models.CharField(max_length=255, verbose_name='Описание')),
                ('type', models.CharField(choices=[('danger', 'Важно!'), ('warning', 'Предупреждение'), ('normal', 'Обычное'), ('success', 'Успешно')], default='normal', max_length=8, verbose_name='Тип')),
                ('read', models.BooleanField(default=False, verbose_name='Прочитано?')),
                ('deal', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.deal', verbose_name='Сделка')),
                ('lead', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.lead', verbose_name='Лид')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='Для кого')),
                ('task', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='main.task', verbose_name='Задача')),
            ],
            options={
                'verbose_name': 'уведомление',
                'verbose_name_plural': 'уведомления',
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='WhatsappMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_created=True, auto_now_add=True, verbose_name='Дата создания')),
                ('message_id', models.CharField(max_length=75, verbose_name='ID')),
                ('body', models.TextField(verbose_name='Текст')),
                ('direction', models.CharField(choices=[('in', 'Входящее'), ('out', 'Исходящее')], max_length=3, verbose_name='Тип')),
                ('status', models.CharField(choices=[('deleted', 'Удалено'), ('delivered', 'Отправлено'), ('failed', 'Неудачно'), ('read', 'Прочитано'), ('sending', 'Отправление'), ('sent', 'Отправлено'), ('viewed', 'Просмотрено')], max_length=10, verbose_name='Статус')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Дата обновления')),
                ('lead', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='main.lead', verbose_name='Лид')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'сообщение из whatsapp',
                'verbose_name_plural': 'сообщения из whatsapp',
                'db_table': 'whatsapp_messages',
                'ordering': ['created_at'],
            },
        ),
    ]
