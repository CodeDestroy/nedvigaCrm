# Generated by Django 5.0 on 2024-04-03 13:00

import django.core.validators
import main.models.site.object_photo
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('main', '0019_deal_com_paid_alter_deal_frm'),
    ]

    operations = [
        #migrations.CreateModel(
        #    name='BuyObject',
        #    fields=[
        #        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #        ('user_id', models.IntegerField(verbose_name='Кто создал')),
        #        ('description', models.TextField(verbose_name='Описание')),
        #        ('address', models.CharField(max_length=256, verbose_name='Адрес')),
        #        ('operation_type', models.CharField(choices=[('Продам', 'Продам'), ('Сдам', 'Сдам')], max_length=7, verbose_name='Тип операции')),
        #        ('category', models.CharField(choices=[('Квартиры', 'Квартиры'), ('Дом, дачи, коттеджи', 'Дом, дачи, коттеджи'), ('Земельные участки', 'Земельные участки'), ('Коммерческая недвижимость', 'Коммерческая недвижимость')], max_length=26, verbose_name='Категория')),
        #        ('price', models.IntegerField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Цена')),
        #        ('floors', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Этажи')),
        #        ('floor', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(99)], verbose_name='Этаж')),
        #        ('rooms', models.CharField(choices=[('Студия', 'Студия'), ('1', '1'), ('2', '2'), ('3', '3'), ('4', '4'), ('5', '5'), ('6', '6'), ('7', '7'), ('8', '8'), ('9', '9'), ('10 и более', '10 и более'), ('Своб.Планировка', 'Своб.Планировка')], max_length=16, verbose_name='Количество комнат')),
        #        ('square', models.FloatField(validators=[django.core.validators.MinValueValidator(0)], verbose_name='Площадь')),
        #        ('property_rights', models.CharField(choices=[('Собственник', 'Собственник'), ('Посредник', 'Посредник')], max_length=12, verbose_name='Право собственности')),
        #        ('object_type', models.CharField(blank=True, choices=[('Дом', 'Дом'), ('Дача', 'Дача'), ('Коттедж', 'Коттедж'), ('Таунхаус', 'Таунхаус'), ('Поселений (ИЖС)', 'Поселений (ИЖС)'), ('Сельхозназначения (СНТ, ДНП)', 'Сельхозназначения (СНТ, ДНП)'), ('Промназначения', 'Промназначения'), ('Личное подсобное хозяйство (ЛПХ)', 'Личное подсобное хозяйство (ЛПХ)')], max_length=32, null=True, verbose_name='Тип объекта')),
        #        ('published', models.BooleanField(default=False, verbose_name='Опубликовано?')),
        #    ],
        #    options={
        #        'verbose_name': 'вторичный объект',
        #        'verbose_name_plural': 'вторичные объекты',
        #        'db_table': 'buy_objects',
        #        'managed': False,
        #    },
        #),
        migrations.CreateModel(
            name='ObjectCommerce',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ceiling_height', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(100)], verbose_name='Высота потолков, в метрах')),
                ('decoration', models.CharField(choices=[('Без отделки', 'Без отделки'), ('Чистовая', 'Чистовая'), ('Офисная', 'Офисная')], max_length=12, verbose_name='Отделка')),
                ('building_type', models.CharField(choices=[('Бизнес-центр', 'Бизнес-центр'), ('Торговый центр', 'Торговый центр'), ('Административное здание', 'Административное здание'), ('Жилой дом', 'Жилой дом'), ('Другой', 'Другой')], max_length=24, verbose_name='Тип здания')),
                ('parking_type', models.CharField(choices=[('Нет', 'Нет'), ('На улице', 'На улице'), ('В здании', 'В здании')], max_length=9, verbose_name='Тип парковки')),
                ('places_amount', models.IntegerField(validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1000)], verbose_name='Количество мест в коворкинге')),
                ('weekend_work', models.BooleanField(default=False, verbose_name='Работает ли в выходные')),
                ('working_24_hours', models.BooleanField(default=False, verbose_name='Работает ли круглосуточно')),
                ('works_from', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)], verbose_name='Время начала работы')),
                ('works_till', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(24)], verbose_name='Время закрытия')),
                ('place_type', models.CharField(choices=[('Закреплённое место', 'Закреплённое место'), ('Плавающее место', 'Плавающее место'), ('Отдельный кабинет', 'Отдельный кабинет')], max_length=19, verbose_name='Статус рабочего места')),
                ('room_area', models.IntegerField(validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(1000)], verbose_name='Площадь кабинета')),
                ('places_in_room', models.IntegerField(validators=[django.core.validators.MinValueValidator(4), django.core.validators.MaxValueValidator(1000)], verbose_name='Количество рабочих мест в кабинете')),
                ('rental_type', models.CharField(choices=[('Прямая', 'Прямая'), ('Субаренда', 'Субаренда')], max_length=10, verbose_name='Тип аренды')),
                ('object_type', models.CharField(choices=[('Офисное помещение', 'Офисное помещение'), ('Помещение свободного назначения', 'Помещение свободного назначения'), ('Торговое помещение', 'Торговое помещение'), ('Складское помещение', 'Складское помещение'), ('Производственное помещение', 'Производственное помещение'), ('Помещение общественного питания', 'Помещение общественного питания'), ('Гостиница', 'Гостиница'), ('Автосервис', 'Автосервис'), ('Здание', 'Здание'), ('Коворкинг', 'Коворкинг')], max_length=32, verbose_name='Тип объекта')),
                ('entrance', models.CharField(choices=[('С улицы', 'С улицы'), ('Со двора', 'Со двора')], max_length=9, verbose_name='Вход')),
                ('layout', models.CharField(choices=[('Кабинетная', 'Кабинетная'), ('Открытая', 'Открытая')], max_length=11, verbose_name='Планировка')),
            ],
            options={
                'verbose_name': 'параметры коммерции у объекта',
                'verbose_name_plural': 'параметры коммерции у объектов',
                'db_table': 'object_commerce',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectFlat',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renovation', models.CharField(choices=[('Требуется', 'Требуется'), ('Косметический', 'Косметический'), ('Евро', 'Евро'), ('Дизайнерский', 'Дизайнерский')], max_length=15, verbose_name='Ремонт')),
                ('deal_type', models.CharField(choices=[('Прямая продажа', 'Прямая продажа'), ('Альтернативная', 'Альтернативная')], max_length=15, verbose_name='Тип сделки')),
                ('status', models.CharField(choices=[('Квартира', 'Квартира'), ('Апартаменты', 'Апартаменты')], max_length=12, verbose_name='Статус')),
                ('kitchen_space', models.FloatField(default=0, verbose_name='Площадь кухни')),
                ('room_type', models.CharField(choices=[('Изолированные', 'Изолированные'), ('Смежные', 'Смежные')], max_length=14, verbose_name='Тип комнат')),
                ('house_type', models.CharField(choices=[('Кирпичный', 'Кирпичный'), ('Панельный', 'Панельный'), ('Блочный', 'Блочный'), ('Монолитный', 'Монолитный'), ('Монолитно-кирпичный', 'Монолитно-кирпичный'), ('Деревянный', 'Деревянный')], max_length=20, verbose_name='Тип дома')),
            ],
            options={
                'verbose_name': 'параметры квартиры',
                'verbose_name_plural': 'параметры квартир',
                'db_table': 'object_flat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectHouse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('renovation', models.CharField(choices=[('Требуется', 'Требуется'), ('Косметический', 'Косметический'), ('Евро', 'Евро'), ('Дизайнерский', 'Дизайнерский')], max_length=15, verbose_name='Ремонт')),
                ('walls_type', models.CharField(choices=[('Кирпич', 'Кирпич'), ('Брус', 'Брус'), ('Бревно', 'Бревно'), ('Газоблоки', 'Газоблоки'), ('Металл', 'Металл'), ('Пеноблоки', 'Пеноблоки'), ('Сэндвич-панели', 'Сэндвич-панели'), ('Ж/б панели', 'Ж/б панели'), ('Экспериментальные материалы', 'Экспериментальные материалы')], max_length=28, verbose_name='Материал стен')),
                ('land_area', models.IntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(1200)], verbose_name='Площадь участка в сотках')),
                ('land_status', models.CharField(choices=[('Индивидуальное жилищное строительство (ИЖС)', 'Индивидуальное жилищное строительство (ИЖС)'), ('Садовое некоммерческое товарищество(СНТ)', 'Садовое некоммерческое товарищество(СНТ)'), ('Дачное некоммерческое партнёрство(ДНП)', 'Дачное некоммерческое партнёрство(ДНП)'), ('Фермерское хозяйство', 'Фермерское хозяйство'), ('Личное подсобное хозяйство(ЛПХ)', 'Личное подсобное хозяйство(ЛПХ)')], verbose_name='Статус участка')),
            ],
            options={
                'verbose_name': 'параметры дома у объекта',
                'verbose_name_plural': 'параметры дома у объектов',
                'db_table': 'object_house',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='ObjectLease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('l_type', models.CharField(choices=[('На длительный срок', 'На длительный срок'), ('Посуточно', 'Посуточно')], max_length=19, verbose_name='Тип аренды')),
                ('deposit', models.CharField(choices=[('Без залога', 'Без залога'), ('0,5', '0,5'), ('1', '1'), ('1,5', '1,5'), ('2', '2'), ('2,5', '2,5'), ('3', '3')], verbose_name='Залог')),
                ('deposit_price', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(999999)], verbose_name='Сумма залога')),
                ('commission_size', models.IntegerField(default=0, validators=[django.core.validators.MinValueValidator(0), django.core.validators.MaxValueValidator(200)], verbose_name='Размер комиссии')),
                ('utility_meters', models.CharField(choices=[('Оплачивается арендатором', 'Оплачивается арендатором'), ('Оплачивается собственником', 'Оплачивается собственником')], max_length=27, verbose_name='Оплата по счетчикам')),
                ('other_utilities', models.CharField(choices=[('Оплачивается арендатором', 'Оплачивается арендатором'), ('Оплачивается собственником', 'Оплачивается собственником')], help_text='Отопление, капремонт, вывоз мусора, другие', max_length=27, verbose_name='Другие ЖКУ')),
                ('other_utility_payment', models.IntegerField(default=0, help_text='Отопление, капремонт, вывоз мусора, другие', verbose_name='Плата за другие ЖКУ ')),
                ('smoking', models.BooleanField(default=False, verbose_name='Можно курить?')),
                ('children', models.BooleanField(default=False, verbose_name='Можно с детьми?')),
                ('pets', models.BooleanField(default=False, verbose_name='Можно с животными?')),
                ('parties', models.BooleanField(default=False, verbose_name='Разрешены ли вечеринки и мероприятия?')),
                ('documents', models.BooleanField(default=True, verbose_name='Есть ли отчетные документы?')),
            ],
            options={
                'verbose_name': 'параметры аренды у объекта',
                'verbose_name_plural': 'параметры аренды у объектов',
                'db_table': 'object_lease',
                'managed': False,
            },
        ),
        #migrations.CreateModel(
        #    name='ObjectPhoto',
        #    fields=[
        #        ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
        #        ('photo', models.FileField(help_text='Фото формата .png, .jpg, .jpeg. Не более 2мб', upload_to=main.models.site.object_photo.directory_path, verbose_name='Фото')),
        #    ],
        #    options={
        #        'verbose_name': 'фото объявления',
        #        'verbose_name_plural': 'фотографии объявлений',
        #        'db_table': 'object_photo',
        #        'managed': False,
        #    },
        #),
        migrations.DeleteModel(
            name='Exclusive',
        ),
    ]
